// Packages
import { Container, Header } from 'semantic-ui-react'

// Ours
import { host } from '../config/client'
import fetch from '../lib/fetch'

// Components
import IssueForm from '../components/IssueForm'
import Error from '../components/Error'

class FormPage extends React.Component {
	static async getInitialProps({ req }) {
		// Extract owner and name
		const match = /to\/([^\/]+)\/([^\/\?]+)/.exec(req.url)
		const owner = match[1]
		const name = match[2]

		const full_name = `${owner}/${name}`

		// Request submit.yml file
		const res = await fetch(req, `/api/${full_name}/submit.json`)

		if (!res.ok) {
			return { found: false, full_name }
		}

		try {
			const src = await res.json()
			return { found: true, src, full_name }
		} catch (err) {
			return { found: false, full_name }
		}
	}

	state = {
		success: false,
		failure: false,
		issue_url: ''
	}

	onSubmit(title, fields) {
		const body = fields
			.concat([
				`
---

This issue was generated by [submitter ðŸš€][repo]. Please report issues [here][issues]. Happy coding!

[repo]: https://github.com/ahmed-taj/submitter
[issues]: https://github.com/ahmed-taj/submitter/issues				
`
			])
			.join('\n\n')

		fetch(null, `/api/${this.props.full_name}/submit`, {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json'
			},
			body: JSON.stringify({ title, body })
		})
			.then(res => {
				if (res.ok) {
					this.setState({ success: true })
					res.json().then(data => {
						this.setState({ issue_url: data['html_url'] })
					})
				}
			})
			.catch(err => {
				this.setState({ failure: true })
			})
	}

	render() {
		if (this.props.found && !this.state.success && !this.state.failure) {
			return (
				<IssueForm
					meta={this.props.src.meta}
					fields={this.props.src.form}
					path={this.props.full_name}
					onSubmit={this.onSubmit.bind(this)}
				/>
			)
		} else if (this.state.success) {
			return (
				<Container className="prefectly-centered">
					<Header as="h1">
						Nice!
						<Header.Subheader>
							A new issue has been opened at{' '}
							<a href={this.state.issue_url} style={{ color: 'purple' }}>
								{this.props.full_name}
							</a>
						</Header.Subheader>
					</Header>
				</Container>
			)
		} else if (this.state.failure) {
			return (
				<Error>
					An unexpected error has occurred. You may want to check GitHub to make
					sure a new issue isn't actually been created
				</Error>
			)
		} else {
			const url = `https://github.com/${this.props.full_name}`
			return (
				<Error>
					Looks like the repository at{' '}
					<a href={url} style={{ color: 'purple' }}>
						{this.props.full_name}
					</a>{' '}
					isn't submission friendly!
				</Error>
			)
		}
	}
}

export default FormPage
